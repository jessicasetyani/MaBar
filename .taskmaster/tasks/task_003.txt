# Task ID: 3
# Title: Build Venue Onboarding Flow for Venue Owners
# Status: in-progress
# Dependencies: 2, 12
# Priority: high
# Description: Create the onboarding process for venue owners to submit court details for verification, enabling venue data collection for the platform.
# Details:
Implement frontend forms for venue owners to input venue details, location (use Google Maps API for address autocomplete), operating hours, and upload images. Backend endpoints built with Rust using Actix Web or Axum framework to receive and store venue data with verification status set to pending. Use official MongoDB Rust driver for database integration. Validate inputs on frontend and backend with proper error handling. Use MongoDB schema for Venue with fields as per PRD.

# Test Strategy:
Validate form input constraints and error handling. Submit venue data and verify it appears in admin verification queue. Test image upload and storage. Confirm data integrity in MongoDB. Test Rust backend endpoints for proper error handling and MongoDB integration.

# Subtasks:
## 1. Create Venue Routes and Controllers in Rust Backend [pending]
### Dependencies: None
### Description: Implement Rust backend endpoints for venue submission, including POST /api/venues for creating new venue submissions with validation and MongoDB integration
### Details:
Create venue routes in Rust backend with endpoints for venue submission. Implement proper validation, error handling, and MongoDB integration using the existing Venue model.

## 2. Enhance Frontend Venue Submission Form [pending]
### Dependencies: None
### Description: Enhance the existing VenueDetails component with Google Maps integration for address autocomplete, image upload functionality, and operating hours management
### Details:
Update the VenueDetails.jsx component to include Google Maps API integration for address autocomplete, implement image upload with preview, and add operating hours selection interface.

