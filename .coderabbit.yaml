language: "en-US"
early_access: false
reviews:
  profile: "chill"
  request_changes_workflow: false
  high_level_summary: true
  poem: true
  review_status: true
  collapse_ellipsis: false
  auto_review:
    enabled: true
    drafts: false
  path_filters:
    - "!**/*.md"
    - "!**/*.txt"
    - "!**/package-lock.json"
    - "!**/yarn.lock"
    - "!**/Cargo.lock"
  path_instructions:
    - path: "backend-rust/**"
      instructions: |
        Review Rust backend code focusing on:
        - Security best practices
        - Error handling
        - Performance optimizations
        - Code organization and modularity
        - Database query efficiency
        - Authentication and authorization logic
    - path: "frontend/**"
      instructions: |
        Review React frontend code focusing on:
        - Component structure and reusability
        - State management patterns
        - Performance optimizations
        - Accessibility compliance
        - User experience improvements
        - Security considerations (XSS prevention)
    - path: "**/*.rs"
      instructions: |
        For Rust files, pay special attention to:
        - Memory safety and ownership patterns
        - Error propagation using Result types
        - Async/await usage and performance
        - Security vulnerabilities
        - Code documentation and comments
    - path: "**/*.jsx"
      instructions: |
        For React JSX files, focus on:
        - Component props validation
        - Hooks usage and dependencies
        - Event handling security
        - Performance optimizations
        - Accessibility attributes
chat:
  auto_reply: true
